version: '3.8'
services:

  postgres:
    image: postgres:14.5
    container_name: "database"
    volumes:
      - ./db:/var/lib/postgresql/data
      - ./dbscripts/:/docker-entrypoint-initdb.d/
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always
    env_file:
      - .env
    ports:
      - "54321:5432"

  elastic:
    image: elasticsearch:7.9.1
    container_name: "elastic"
    volumes:
      - ./elastic_data:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"

  redis:
    image: redis
    container_name: aioredis
    ports:
      - "63791:6379"

  backend:
    container_name: backend
    build:
      context: .
    env_file:
      - .env
    depends_on:
      - postgres
      - elastic
      - redis
    ports:
      - "8000:8000"


# Мой вариант на всяикий случай

# version: '3.3'

# services:

#   db:
#     image: postgres:14.0-alpine
#     volumes:
#       - ./schema_design/movies_database.sql:/docker-entrypoint-initdb.d/movies_database.sql
#       - postgres_data:/var/lib/postgresql/data
#     restart: always
#     env_file:
#       - ./.env
#     ports:
#       - 5432:5432

#   service:
#     build: ./django_api
#     restart: always
#     volumes:
#       - static_value:/opt/app/static/
#       - media_value:/opt/app/media/
#     depends_on:
#       - db
#     env_file:
#       - ./.env

#   nginx:
#     image: nginx:latest
#     restart: always
#     volumes:
#       - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
#       - ./nginx/configs/site.conf:/etc/nginx/conf.d/site.conf:ro
#       - static_value:/opt/app/static/
#       - media_value:/opt/app/media/
#     depends_on:
#       - service
#     ports:
#       - '80:80'

#   redis:
#     image: redis:7-alpine
#     restart: always
#     env_file:
#       - .env
#     ports:
#       - '6379:6379' 
#     volumes:
#       - redis_data:/data

#   elasticsearch_db:
#     image: elasticsearch:8.5.0
#     restart: always
#     env_file:
#       - .env
#     environment:
#       - xpack.security.enabled=false
#       - discovery.type=single-node
#     volumes:
#       - elasticsearch_data:/opt/elasticsearch/data
#     ports:
#       - '9200:9200'
  
#   etl:
#     build: ./postgres_to_es
#     restart: always
#     volumes:
#       - ./postgres_to_es:/opt/etl/
#     env_file:
#       - .env
#     depends_on:
#       - elasticsearch_db
#       - redis
#       - db

#   api:
#     build: ./fastapi_solution
#     restart: always
#     env_file:
#       - .env
#     depends_on:
#       - elasticsearch_db
#       - redis


# volumes:
#   elasticsearch_data:
#   redis_data:
#   postgres_data:
#   static_value:
#   media_value: